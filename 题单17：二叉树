https://xujcoj.com/home/contest/1676/problem/5

AC:
 (1) 不建树
#include<bits/stdc++.h>
using namespace std;
const int p=1e5+9;
int a[p];
int main()
{
	int n;
	cin>>n;
	for(int i=1;i<=n;i++) cin>>a[i];
	
	int cnt=0;
	for(int i=1;i<=n;i++)
	{
		if(i/2>0&&a[i]>a[i/2]) cnt++;
	}
	cout<<cnt<<endl;
}


(2)建树
#include<bits/stdc++.h>
using namespace std;
const int p = 1e5 + 9;
int a[p], n;

typedef struct bst {
    int data;
    struct bst* l;
    struct bst* r;
} bst, *btree;

btree built(int x)//插入节点
{
	if(x>n) return NULL;
	btree ro=(bst*)malloc(sizeof(bst));
	ro->data=a[x];	
	
	ro->l=built(2*x);
	ro->r=built(2*x+1);
	return ro;
}

int sum(btree ro)//求和
{
	if(ro==NULL) return 0;
	int cnt=0;
	if(ro->l!=NULL)
	{
		if(ro->l->data>ro->data) cnt++;
		cnt+=sum(ro->l);	
	}
	if(ro->r!=NULL)
	{
		if(ro->r->data>ro->data) cnt++;
		cnt+=sum(ro->r);	
	}
	
	return cnt;
}
int main()
{
	cin>>n;	
	for (int i = 1; i <= n; i++) cin >> a[i];
		
	btree ro=built(1);
	
	cout<<sum(ro)<<endl;
} 
